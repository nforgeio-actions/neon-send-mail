#------------------------------------------------------------------------------
# Sends an email from the current user's O365 account.  This requires that the
# account's master 1Password be present as the MASTER_PASSWORD environment
# variable.

name: neon-send-mail
description: Sends an email via Office 365.
inputs:
  to: 
    description: Target email addresses separated by commas.
    required: true
  subject: 
    description: The subject line
    required: true
  cc:
    description: Optional CC email addresses separated by commas.
    required: false
  bcc:
    description: Optional BCC address separated by commas.
    required: false
  body:
    description: Optional email body text.
    required: false
    default: ""
  bodyAsHtml: 
    description: Optionally indicates that the body text is HTML.
    required: false
    default: false
runs:
  using: composite
  steps:
  - shell: pwsh
    run: |
      
      # Pick up the deployment related functions
        
      . $env:NC_ROOT/Powershell/deployment.ps1
      
      # Fetch the credentials
      
      $masterPassword = $env:MASTER_PASSWORD

      if ($masterPassword -eq $null)
      {
          throw "MASTER_PASSWORD is required."
      }

      $username    = GetSecretValue "NEONFORGE_LOGIN[username]" -MasterPassword $masterPassword
      $password    = GetSecretPassword "SMTP_PASSWORD" -MasterPassword $masterPassword
      $credentials = New-Object -TypeName System.Net.NetworkCredential -ArgumentList $username, $password
      
      # Fetch the parameters
      
      $to         = ${{ to }}
      $subject    = ${{ subject }}
      $body       = ${{ body }}
      $bodyAsHtml = ${{ bodyAsHtml }}
     
      # Construct the email message

      $message = New-Object System.Net.Mail.MailMessage
        
      ForEach ($address in $env:to.Split(",", [System.StringSplitOptions]::RemoveEmptyEntries))
      {
          $address = $address.Trim()
          if ($address -ne "")
          {
              $address = New-Object -TypeName System.Net.Mail.MailAddress -ArgumentList $address
              $message.To.Add($address)
          }
      }
        
      $message.From       = New-Object -TypeName System.Net.Mail.MailAddress -ArgumentList $username
      $message.Subject    = $subject
      $message.Body       = $body
      $message.IsBodyHtml = $bodyAsHtml

      # Send the message
        
      $smtp             = New-Object Net.Mail.SmtpClient("smtp.office365.com", 587)
      $smtp.Credentials = $credentials
      $smtp.EnableSsl   = $true
      $smtp.Send($message)
 
